server:
  port: 8077

spring:
  profiles:
    active: dev
  application:
    name: qingyin-authority-provider

  cloud:
    nacos:
      discovery:
        enabled: true
        username: nacos
        password: nacos
        server-addr: 192.168.31.211:8848
        namespace: qingyin
    # stream mq
    stream:
      rabbit:
        binder:
          admin-addresses: localhost:15672
      bindings:
         registerSupplier-out-0: # 生产者配置
           content-type: application/json
           destination: registerTopic #交换机(topic)
           binder: rabbit


  # 数据源配置
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    # 数据源
    dynamic:
      primary: qingyin-authority-db #设置默认的数据源或者数据源组
      strict: false
      datasource:
        qingyin-authority-db:
          url: jdbc:mysql://localhost:3306/qingyin-authority?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&useSSL=false
          driver-class-name: com.mysql.jdbc.Driver # MySql的驱动
          username: root # 数据库账号
          password: 123456 # 数据库密码

    druid:
      # 下面为连接池的补充设置，应用到上面所有数据源中
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-active: 20
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 每60秒运行一次空闲连接回收器
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      # 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除.
      test-while-idle: true
      # 建议配置为false。获取连接时执行validationQuery检测连接是否有效，这个配置会降低性能。
      test-on-borrow: false
      # 建议配置为false。获取连接时执行validationQuery检测连接是否有效，这个配置会降低性能。
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      # 验证连接是否可用，使用的SQL语句
      validation-query: SELECT 1
      #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall用于防火墙
      max-pool-prepared-statement-per-connection-size: 20
      #      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      #      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # 监控过滤器  可视化页面地址:  http://localhost:8085/druid/login.html
      webStatFilter:
        #  是否开启监控
        enabled: true
      # 提供监控信息展示的html页面;提供监控信息的JSON API
      statViewServlet:
        enabled: true
        # 设置白名单，不填则允许所有访问
        allow:
        #  监控路径
        url-pattern: /druid/*
        # 控制台管理用户名和密码
        login-username: admin
        login-password: admin
      # 慢sql记录
      filter:
        stat:
          enabled: true # 开启DruidDataSource状态监控
          log-slow-sql: true # 开启慢SQL记录功能,启用后如果遇到执行很慢的 SQL，便会输出到日志中，
          slow-sql-millis: 5000  # 默认3000毫秒，这里超过5s，就是慢，记录到日志
          merge-sql: true
        # 防御SQL注入
        wall:
          config:
            multi-statement-allow: true

  # Redis配置
  redis:
    host: localhost   # Redis服务地址
    port: 6379        # Redis端口
    password: 123456  # Redis密码
    database: 0       # 数据库索引
    timeout: 5000     # 连接超时
    lettuce:
      pool:
        max-wait: 30000 # 连接池最大阻塞等待时间(使用负数表示没有限制,默认-1)
        max-active: 100 # 连接池最大连接数(使用负数表示没有限制,默认8)
        max-idle: 20    # 连接池中的最大空闲连接(默认8)
        min-idle: 0     # 连接池中的最小空闲连接(默认0)


  rabbitmq:
    host: 192.168.31.217
    port: 5672
    username: guest
    password: guest


# Mybatis-plus配置
mybatis-plus:
  configuration:
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl



# 日志文件配置
logging:
  level:
    org.springframework.context.support.PostProcessorRegistrationDelegate: ERROR # TODO 芋艿：先禁用，Spring Boot 3.X 存在部分错误的 WARN 提示
  file:
    name: ${user.home}/logs/${spring.application.name}.log # 日志文件名，全路径

