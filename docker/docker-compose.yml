version: "3.8"
services:
  kafka1:
    container_name: kafka01
    image: 'bitnami/kafka'
    user: root
    networks:
      - kafka_net
    ports:
      - '19092:9092'
      - '19093:9093'
    environment:
      # 允许使用Kraft
      - KAFKA_ENABLE_KRAFT=yes
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      # 定义kafka服务端socket监听端口（Docker内部的ip地址和端口）
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      # 定义安全协议
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      #定义外网访问地址（宿主机ip地址和端口）
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://192.168.31.128:19092
      # 使用Kafka时的集群id，集群内的Kafka都要用这个id做初始化，生成一个UUID即可
      - KAFKA_BROKER_ID=1
      - KAFKA_KRAFT_CLUSTER_ID=1
      - KAFKA_CFG_NODE_ID=1
       # 集群地址
      # - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka11:9093,2@kafka22:9093,3@kafka33:9093
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka01:9093
      # 允许使用PLAINTEXT监听器，默认false，不建议在生产环境使用
      - ALLOW_PLAINTEXT_LISTENER=yes
      # 设置broker最大内存，和初始内存
      - KAFKA_HEAP_OPTS=-Xmx512M -Xms256M
    volumes:
      - /home/docker/kafka/broker:/bitnami/kafka:rw
    
  # https://blog.csdn.net/Vector97/article/details/128539970
  kafkaui:
    container_name: kafkaui
    image: provectuslabs/kafka-ui:latest
    networks:
      - kafka_net
    ports:
      - '8050:8080'
    environment:
      - KAFKA_CLUSTERS_0_NAME=kafka01
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka01:9092
      - TZ=Asia/Shanghai
      - LANG=C.UTF-8
      - SERVER_SERVLET_CONTEXT_PATH=/
      - AUTH_TYPE=LOGIN_FORM
      - SPRING_SECURITY_USER_NAME=admin
      - SPRING_SECURITY_USER_PASSWORD=admin123


  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:management
    restart: always
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - /home/docker/rabbitmq/data/:/var/lib/rabbitmq/
      - /home/docker/rabbitmq/log/:/var/log/rabbitmq/log/
    environment:
      - TZ=Asia/Shanghai
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin123

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    networks:
      - es_net
    depends_on:
      - elasticsearch
    links:
      - elasticsearch:es
    environment:
      - TZ=Asia/Shanghai
      - STORAGE_TYPE=elasticsearch
      - ES_HOSTS=http://es:9200
      - ES_USERNAME=elastic
      - ES_PASSWORD=123456
      - JAVA_OPTS=-Dlogging.level.zipkin2=DEBUG
    ports:
      - 9411:9411
  
  elasticsearch:
    image: elasticsearch:7.17.7
    container_name: elasticsearch
    networks:
      - es_net
    # restart: always
    ports:
      - 9200:9200
      - 9300:9300
    privileged: true
    volumes:
      - /home/docker/es/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - /home/docker/es/logs:/usr/share/elasticsearch/logs
      - /home/docker/es/data:/usr/share/elasticsearch/data
      - /home/docker/es/plugins:/usr/share/elasticsearch/plugins
    environment:
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - LANG=en_US.UTF-8

  kibana:
    image: kibana:7.17.7
    container_name: kibana
    privileged: true
    networks:
      - es_net
    # restart: always
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch
    links:
      - elasticsearch:es
    volumes:
      - /home/docker/kibana/config/kibana.yml:/usr/share/kibana/config/kibana.yml
    environment:
      - ELASTICSEARCH_HOSTS=http://es:9200
      - ELASTICSEARCH_URL=http://es:9200
      - TZ=Asia/Shanghai


networks:
  kafka_net:
    driver: bridge
  es_net:
    driver: bridge